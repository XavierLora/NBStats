async function getPlayerStats(gameStats) {
  const apiUrl = `${gameStats}`;

  return new Promise(async (resolve, reject) => {
      try {
          const response = await fetch(apiUrl);
          if (!response.ok) {
              throw new Error('Error fetching game stats');
          }
          const gameData = await response.json();

          const categories = gameData[0].splits.categories;
          const playerStats = [];

          categories.forEach(category => {
              category.athletes.forEach(async athlete => {
                console.log(athlete.$ref);
                console.log(statistics.$ref);
                  const athleteApiUrl = `${athlete.$ref}`;
                  const athleteStatApiUrl = `${statistics.$ref}`
                  const athleteResponse = await fetch(athleteApiUrl);
                  const athleteStatResponse = await fetch(athleteStatApiUrl);
                  if (!athleteResponse.ok || !athleteStatResponse.ok) {
                      throw new Error('Error fetching player stats');
                  }
                  const athleteData = await athleteResponse.json();
                  const athleteStatData = await athleteStatResponse.json();
                  playerStats.push({
                      athlete: athleteData,
                      stats: athleteStatData
                  });
              });
          });

          resolve(playerStats);
      } catch (error) {
          reject(new Error('Error fetching player stats'));
      }
  });
}